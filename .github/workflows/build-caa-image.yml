name: build-caa-image

env:
  ACR_REGISTRY: upstreamcaa
  ACR_URL: upstreamcaa.azurecr.io

on:
  push:
    branches:
      - main
      - kartikjoshi21/ci-upstream

jobs:
  build-caa-image:
    runs-on: ubuntu-latest
    environment: build
    steps:
    - uses: actions/checkout@v2

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Docker login
      run: |
        TOKEN=$(az acr login --name "$ACR_REGISTRY" --expose-token --output tsv --query accessToken)
        docker login "$ACR_URL" --username 00000000-0000-0000-0000-000000000000 --password "$TOKEN"
        echo "DOne"
        pwd

    - name: Build and push CAA docker image
      env:
        registry: ${{ env.ACR_URL }}
        CLOUD_PROVIDER: azure
      run: |
        docker buildx create --name multiarch --driver docker-container --use
        make image

  build-podvm-image:
    runs-on: ubuntu-latest
    environment: build
    outputs:
      podvm-image-id: ${{ steps.create-podvm-image.podvm_image_id }}
    steps:
    - name: Create podvm image
      id: create-podvm-image
      run: |
        temp_image_id="/subscriptions/607b4780-31dd-4af0-a87f-69a27745147e/resourceGroups/e2e-test-rg-images/providers/Microsoft.Compute/images/finalimagetest"
        echo "::set-output name=podvm_image_id::$temp_image_id"

  run-e2e-test:
    runs-on: ubuntu-latest
    environment: build
    needs:
      - build-caa-image
      - build-podvm-image
    steps:
    - uses: actions/checkout@v2
    - name: Create provisioner file
      env:
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        RESOURCE_GROUP_NAME: "upstream_caa_rg"
        CLUSTER_NAME: "e2e-test-cluster"
        LOCATION: "eastus"
        SSH_KEY_ID: "id_rsa.pub"
        CLOUD_PROVIDER: "azure"
        AZURE_IMAGE_ID: ${{ needs.build-podvm-image.outputs.podvm-image-id }}
      run: |
        cat << EOF > /tmp/provision_azure.properties
          AZURE_SUBSCRIPTION_ID="$AZURE_SUBSCRIPTION_ID"
          AZURE_CLIENT_ID="$AZURE_CLIENT_ID"
          AZURE_CLIENT_SECRET="$AZURE_CLIENT_SECRET"
          AZURE_TENANT_ID="$AZURE_TENANT_ID"
          RESOURCE_GROUP_NAME="$RESOURCE_GROUP_NAME"
          CLUSTER_NAME="$CLUSTER_NAME"
          LOCATION="$LOCATION"
          SSH_KEY_ID="$SSH_KEY_ID"
          CLOUD_PROVIDER="$CLOUD_PROVIDER"
          AZURE_IMAGE_ID="$AZIRE_IMAGE_ID"
        EOF

    - name: Run e2e test
      env:
        TEST_PROVISION_FILE: "/tmp/provision_azure.properties"
        TEST_PROVISION: "yes"
        CLOUD_PROVIDER: "azure"
        BUILTIN_CLOUD_PROVIDERS: "azure"
      run: | 
        cat /tmp/provision_azure.properties
        echo "DOne"
        pwd
        echo "DOne"
        ls
        echo "DOne"
        ls ../
        make test-e2e

  cleanup-resources:
    runs-on: ubuntu-latest
    environment: build
    needs:
      - run-e2e-test
      - build-caa-image
      - build-podvm-image
    if: always()

    steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Remove repository and provisioner file
      run: |
        rm -rf /tmp/provision_azure.properties
    - name: Remove caa docker image
      run: |
        az acr repository delete --name  "$ACR_REGISTRY" --image cloud-api-adaptor:latest --yes
